#+Title 关于整个项目 的 所有 记录  包括学习记录 学完之后 把所有内容整理好

#+TODO: TODO(t) NEXT(n) | DONE(d!/!)
#+TODO: REPORT(r) BUG(b) KNOWNCAUSE(k) | settled(s) CANCELLED(c@/!)
#+TODO: PROJECT(p) | DONE(d!/!) CANCELLED(c@/!)
#+TODO: WAITING(w@/!) DELEGATED(e!) HOLD(h) | CANCELLED(c@/!)


* TODO 资料
1. [[file:~/%E5%AD%A6%E4%B9%A0/cs/python/%E9%A1%B9%E7%9B%AE/django/django.org][自己曾经写过的手册]]  借鉴意义其实不大 但是毕竟写上了
* TODO 复习 跟着老齐学django
SCHEDULED: <2020-10-03 六 >
:LOGBOOK:
CLOCK: [2020-10-03 六 08:06]--[2020-10-03 六 08:09] =>  0:03
CLOCK: [2020-10-02 五 19:45]--[2020-10-02 五 20:36] =>  0:51
CLOCK: [2020-10-02 五 11:47]--[2020-10-02 五 12:12] =>  0:25
CLOCK: [2020-10-02 五 11:41]--[2020-10-02 五 11:47] =>  0:06
CLOCK: [2020-10-02 五 10:41]--[2020-10-02 五 11:33] =>  0:52
CLOCK: [2020-10-02 五 09:40]--[2020-10-02 五 10:30] =>  0:50
CLOCK: [2020-10-02 五 08:55]--[2020-10-02 五 09:35] =>  0:40
CLOCK: [2020-10-01 四 13:31]--[2020-10-01 四 14:03] =>  0:32
CLOCK: [2020-10-01 四 10:49]--[2020-10-01 四 11:39] =>  0:50
CLOCK: [2020-09-29 二 20:49]--[2020-09-29 二 21:18] =>  0:29
:END:
:
信息
1. 项目位置:/home/work/学习/cs/python/项目/
   | 属性     | 名称 |
   |----------+------|
   | 练习项目 |      |
   | 实践项目 |      |
3. python版本:3.09
4. django版本:3.1.1
** 目录
第1章 简单的博客系统 1
1.1 Django起步 1
1.1.1 Django简介 1
1.1.2 安装Django 3
1.1.3 创建项目 4
1.1.4 创建应用 6
1.1.5 网站配置 11
1.1.6 知识点 12
1.2 编写博客的数据模型类 12
1.2.1 数据模型类 13
1.2.2 发布博客文章 17
1.2.3 知识点 21
1.3 显示博客信息 23
1.3.1 显示文章标题 24
1.3.2 查看文章内容 28
1.3.3 知识点 32
第2章 用户管理 35
2.1 自定义模板和静态文件位置 35
2.1.1 自定义模板位置 36
2.1.2 自定义静态文件位置 36
2.1.3 通用静态文件和基础模板 37
2.1.4 重置管理后台模板 40
2.1.5 知识点 42
2.2 用户登录 43
2.2.1 创建应用 44
2.2.2 理解表单类 45
2.2.3 登录的视图函数 47
2.2.4 登录的前端界面 49
2.2.5 知识点 53
2.3 用内置方法实现登录和退出 54
2.3.1 内置的登录方法 55
2.3.2 判断用户是否登录 58
2.3.3 内置的退出方法 59
2.3.4 知识点 60
2.4 用户注册 62
2.4.1 简单注册 62
2.4.2 增加注册内容 65
2.4.3 管理新增的注册内容 70
2.4.4 知识点 71
2.5 关于密码的操作 72
2.5.1 修改密码 73
2.5.2 重置密码 78
2.5.3 利用第三方应用重置密码 84
2.5.4 知识点 87
2.6 维护个人信息 88
2.6.1 个人信息的数据模型类和表单类 88
2.6.2 展示个人信息 90
2.6.3 编辑个人信息 93
2.6.4 上传和裁剪头像图片 97
2.6.5 优化头像上传功能 105
2.6.6 对个人信息进行管理 107
2.6.7 知识点 108
第3章 文章管理和展示 110
3.1 管理文章栏目 110
3.1.1 设置栏目 110
3.1.2 编辑栏目 118
3.1.3 删除栏目 120
3.1.4 知识点 122
3.2 发布和显示文章 125
3.2.1 简单的文章发布 126
3.2.2 使用Markdown 131
3.2.3 文章标题列表 133
3.2.4 知识点 140
3.3 删除和修改文章 141
3.3.1 删除 142
3.3.2 修改 143
3.3.3 设置分页功能 147
3.3.4 知识点 149
3.4 文章展示 151
3.4.1 新写文章标题列表 151
3.4.2 重新编写“查看文章”功能 155
3.4.3 知识点 156
第4章 拓展网站功能 158
4.1 梳理已有功能 158
4.1.1 修改导航栏 158
4.1.2 修改登录和注册后的跳转 159
4.1.3 知识点 161
4.2 查看作者全部文章 161
4.2.1 查看某作者的文章列表 162
4.2.2 知识点 165
4.3 为文章点赞 167
4.3.1 修改数据模型类 167
4.3.2 编写视图函数 168
4.3.3 修改模板文件 169
4.3.4 知识点 172
4.4 文章的阅读次数 173
4.4.1 安装Redis 174
4.4.2 在Python中使用Redis 175
4.4.3 记录阅读次数 176
4.4.4 显示最“热”文章 177
4.4.5 知识点 179
4.5 文章的评论功能 180
4.5.1 数据模型类和表单类 180
4.5.2 实现评论功能 181
4.5.3 知识点 184
4.6 多样化显示 185
4.6.1 统计文章总数 186
4.6.2 最新发布的文章 188
4.6.3 评论最多的文章 189
4.6.4 自定义模板选择器 192
4.6.5 知识点 193
4.7 管理和应用文章标签 195
4.7.1 管理文章标签 195
4.7.2 发布文章时选择标签 200
4.7.3 在文章中显示文章标签 202
4.7.4 推荐相似文章 202
4.7.5 知识点 204
第5章 收集和展示图片 206
5.1 收集网络图片 206
5.1.1 创建图片相关类 207
5.1.2 收集和管理图片 210
5.1.3 完善图片管理功能 214
5.1.4 知识点 218
5.2 展示图片 219
5.2.1 瀑布流方式展示图片 219
5.2.2 查看图片的详细信息 223
5.2.3 知识点 224
第6章 中场休整 226
第7章 创建在线学习应用 227
7.1 基于类的视图 227
7.1.1 最简类视图 228
7.1.2 读取数据 230
7.1.3 初步了解Mixin 232
7.1.4 知识点 233
7.2 管理课程标题 234
7.2.1 判断用户是否登录 235
7.2.2 创建课程 237
7.2.3 删除课程 239
7.2.4 知识点 243
7.3 发布和学习课程内容 245
7.3.1 课程内容的数据模型 246
7.3.2 课程内容的表单类 249
7.3.3 课程内容的视图 250
7.3.4 查看课程内容 252
7.3.5 注册学习课程 257
7.3.6 知识点 260
第8章 结束和开始 262 [
** TODO 按照自己的思路搭建blog
:LOGBOOK:
CLOCK: [2020-10-01 四 09:52]--[2020-10-01 四 10:05] =>  0:13
:END:
*** DONE 第1章 基础搭建
CLOSED: [2020-10-02 五 12:02]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-02 五 12:02]
:END:
**** DONE 完成发表部分
CLOSED: [2020-10-01 四 10:01]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-01 四 10:01]
CLOCK: [2020-09-29 二 21:23]--[2020-09-29 二 21:32] =>  0:09
:END:
***** DONE 修改setting.py
CLOSED: [2020-09-29 二 21:34]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-09-29 二 21:34]
:END:
***** WAITING model
:LOGBOOK:
- State "WAITING"    from "TODO"       [2020-09-29 二 21:55] \\
  和他的版本略微 不同 因为django的版本有差异
  主要在 author  部分 也不知道能不能用 后续再检测
  pdf23
CLOCK: [2020-09-29 二 21:32]--[2020-09-29 二 22:01] =>  0:29
:END:
***** DONE model形成表单
CLOSED: [2020-09-29 二 21:59]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-09-29 二 21:59]
:END:
***** DONE 生成数据库
CLOSED: [2020-09-29 二 21:59]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-09-29 二 21:59]
:END:
***** DONE 查看数据库的方法
CLOSED: [2020-10-01 四 09:36]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-01 四 09:36]
:END:
****** TODO firefox插件法
:LOGBOOK:
CLOCK: [2020-09-29 二 22:21]--[2020-09-29 二 22:23] =>  0:02
:END:
****** USEFULL sudo apt-get install sqlitebrowser
CLOSED: [2020-10-01 四 09:35]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2020-10-01 四 09:35] \\
  有用 图形化 可看
CLOCK: [2020-10-01 四 09:33]--[2020-10-01 四 09:35] =>  0:02
:END:

****** USELESS chrom插件法
CLOSED: [2020-10-01 四 09:30]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2020-10-01 四 09:30] \\
  没找到适用的图形化插件
CLOCK: [2020-10-01 四 08:49]--[2020-10-01 四 09:30] =>  0:41
CLOCK: [2020-09-29 二 22:23]--[2020-09-29 二 22:44] =>  0:21
CLOCK: [2020-09-29 二 22:17]--[2020-09-29 二 22:21] =>  0:04
:END:
1. [ ]
******* USELESS sqlite writer
CLOSED: [2020-10-01 四 09:30]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2020-10-01 四 09:30] \\
  一样 也不是图形化 插件
:END:
******* USELESS SQLite Reader

CLOSED: [2020-10-01 四 09:27]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2020-10-01 四 09:27] \\
  没什么用 不是图形化  放弃
:END:
******** TODO 没有内容显示
1. [X] 按照教程 从头创建一遍 数据
2. [ ] 是不是我不会用插件
3. [ ] 按照教程 从头创建一遍 全部内容
4. [ ] 检查创建过程
5. [ ] 检查数据类型
6. [ ] 是不是 数据本身的问题
7. [ ] 是不是 插件的问题 看看 其他的必定有内容的数据库


**** DONE 发布博客文章 登录admin用户进行测试
CLOSED: [2020-10-01 四 09:52]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-01 四 09:52]
CLOCK: [2020-10-01 四 09:36]--[2020-10-01 四 09:52] =>  0:16
:END:

***** TODO 创建超级管理员
**** DONE 实现添加功能
CLOSED: [2020-10-01 四 10:49]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-01 四 10:49]
:END:


**** DONE url(r'^blog/',include("blog.urls",namespace='blog',app_name='blog')),
CLOSED: [2020-10-01 四 13:51]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-01 四 13:51]
:END:
TypeError: include() got an unexpected keyword

1. [ ] include(module, namespace=None)¶
1. [ ] include(pattern_list)
1. [ ] include((pattern_list, app_namespace), namespace=None)

直接参考已有的site内容 能够处理错误 但是不显示

**** WAITING 关于URL的部分
:LOGBOOK:
- State "WAITING"    from "TODO"       [2020-10-02 五 09:20] \\
  和pdf不一样  改成他那样机会报错 具体原因需要学习和排查
:END:
**** DONE 显示文章标题
CLOSED: [2020-10-02 五 09:20]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-02 五 09:20]
:END:
**** DONE 注意 path怎么+正则?
CLOSED: [2020-10-02 五 10:02]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-02 五 10:02]
:END:
re_path 还是 document  和官方例子 好用 哈哈哈 而且 re_path 还能解决 先前导航失败的问题 说到底 出现问题 就看文档 就完事了
**** DONE urls的注释
CLOSED: [2020-10-02 五 10:03]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-02 五 10:03]
:END:
**** DONE 显示内容 正式查看文章
CLOSED: [2020-10-02 五 10:03]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-02 五 10:03]
:END:
**** DONE 指定静态文件与模板位置
CLOSED: [2020-10-02 五 10:11]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-02 五 10:11]
:END:
1. [ ] stting.py
2. [ ]
*** TODO 第2章[2/6]
SCHEDULED: <2020-10-03 六 8:00>
:LOGBOOK:
CLOCK: [2020-10-03 六 10:28]
CLOCK: [2020-10-03 六 09:27]--[2020-10-03 六 09:34] =>  0:07
CLOCK: [2020-10-03 六 08:13]--[2020-10-03 六 09:20] =>  1:07
- State "TODO"       from "DONE"       [2020-10-03 六 08:14]
- State "DONE"       from "TODO"       [2020-10-03 六 08:13]
CLOCK: [2020-10-03 六 08:09]--[2020-10-03 六 08:13] =>  0:04
:END:
**** DONE 2.1
CLOSED: [2020-10-02 五 12:00]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-02 五 12:00]
:END:
***** DONE 2.1.3 通用静态文件和基础模板 37
CLOSED: [2020-10-02 五 11:50]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-02 五 11:50]
:END:
1. [ ] 按照教程进行安装
   1. [ ] bootstrap
   2. [ ] jquery
***** DONE 2.1.4 重置管理后台模板 40
CLOSED: [2020-10-02 五 12:00]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-02 五 12:00]
:END:
***** TODO 2.1.5 知识点 42

**** DONE 2.2 用户登录 43
CLOSED: [2020-10-03 六 08:13]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-03 六 08:13]
:END:
***** DONE 2.2.1 创建应用 44
CLOSED: [2020-10-03 六 08:52]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-03 六 08:52]
:END:
1. 创建app
2. app+
3. url配置
   1.
   2.
4. 设置应用
***** DONE 2.2.2 理解表单类 45
CLOSED: [2020-10-03 六 08:52]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-03 六 08:52]
:END:
1. 建立表单
2. shell测试
3. view
   1. request.GET 得到__对象 ,比如URL...中懈怠了两个信息,是__,可以使用request.GET.get() 得到name的值
   2. 用POST提交数据,浏览器的地址栏__发生变化, request.POST提交的数据是__对象
4. url的连接
5. html
   1. action:
   2. csrf_token:
   3. form.as_p
   4. 预设login的修改:account:user_login
   5.





***** DONE 2.2.3 登录的视图函数 47
CLOSED: [2020-10-03 六 08:52]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-03 六 08:52]
:END:
***** DONE 2.2.4 登录的前端界面 49
CLOSED: [2020-10-03 六 09:07]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-03 六 09:07]
:END:
***** TODO 2.2.5 知识点 53
**** TODO 2.3 用内置方法实现登录和退出 54

***** DONE 2.3.1 内置的登录方法 55
CLOSED: [2020-10-03 六 10:27]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-03 六 10:27]
- State "TODO"       from "DONE"       [2020-10-03 六 09:57]
- State "DONE"       from "TODO"       [2020-10-03 六 09:46]
:END:
使用的new-login弄的
1. 查看模板函数
2. 引入django内置的登录 url
3. 使用内置的模板html
4. 修改html的action or 直接传递参数
5. 测试
6. 出现404:解决方案
   1. 修改setting
   2. 重定向


****** 出现了一点问题 怀疑是login的用法不对  看了看document  解决了 呵呵


****** settled 登陆后报错
CLOSED: [2020-10-03 六 10:27]
按照pdf上的描述 解决了 主要是 需要重启才行....
以后多多重启
***** DONE 2.3.2 判断用户是否登录 58
CLOSED: [2020-10-03 六 10:33]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-03 六 10:33]
:END:
1. 修改header.html 区分登录与否
2.
***** DONE 2.3.3 内置的退出方法 59
CLOSED: [2020-10-03 六 10:51]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-03 六 10:51]
:END:
***** TODO 2.3.4 知识点 60
**** TODO 2.4 用户注册 62
***** TODO 2.4.1 简单注册 62
***** TODO 2.4.2 增加注册内容 65
***** TODO 2.4.3 管理新增的注册内容 70
***** TODO 2.4.4 知识点 71
**** TODO 2.5 关于密码的操作 72
***** TODO 2.5.1 修改密码 73
***** TODO 2.5.2 重置密码 78
***** TODO 2.5.3 利用第三方应用重置密码 84
***** TODO 2.5.4 知识点 87
**** TODO 2.6 维护个人信息 88
***** TODO 2.6.1 个人信息的数据模型类和表单类 88
***** TODO 2.6.2 展示个人信息 90
***** TODO 2.6.3 编辑个人信息 93
***** TODO 2.6.4 上传和裁剪头像图片 97
***** TODO 2.6.5 优化头像上传功能 105
***** TODO 2.6.6 对个人信息进行管理 107
***** TODO 2.6.7 知识点 108
*** TODO 第3章 文章管理和展示 110[/]
SCHEDULED: <2020-10-03 六 10:00>
**** TODO 3.1 管理文章栏目 110
***** TODO 3.1.1 设置栏目 110
***** TODO 3.1.2 编辑栏目 118
***** TODO 3.1.3 删除栏目 120
***** TODO 3.1.4 知识点 122
**** TODO 3.2 发布和显示文章 125
***** TODO 3.2.1 简单的文章发布 126
***** TODO 3.2.2 使用Markdown 131
***** TODO 3.2.3 文章标题列表 133
***** TODO 3.2.4 知识点 140
**** TODO 3.3 删除和修改文章 141
***** TODO 3.3.1 删除 142
***** TODO 3.3.2 修改 143
***** TODO 3.3.3 设置分页功能 147
***** TODO 3.3.4 知识点 149
**** TODO 3.4 文章展示 151
***** TODO 3.4.1 新写文章标题列表 151
***** TODO 3.4.2 重新编写“查看文章”功能 155
***** TODO 3.4.3 知识点 156
*** TODO 第4章 拓展网站功能 158[/]
**** TODO 4.1 梳理已有功能 158
***** TODO 4.1.1 修改导航栏 158
***** TODO 4.1.2 修改登录和注册后的跳转 159
***** TODO 4.1.3 知识点 161
**** TODO 4.2 查看作者全部文章 161
***** TODO 4.2.1 查看某作者的文章列表 162
***** TODO 4.2.2 知识点 165
**** TODO 4.3 为文章点赞 167
***** TODO 4.3.1 修改数据模型类 167
***** TODO 4.3.2 编写视图函数 168
***** TODO 4.3.3 修改模板文件 169
***** TODO 4.3.4 知识点 172
**** TODO 4.4 文章的阅读次数 173
***** TODO 4.4.1 安装Redis 174
***** TODO 4.4.2 在Python中使用Redis 175
***** TODO 4.4.3 记录阅读次数 176
***** TODO 4.4.4 显示最“热”文章 177
***** TODO 4.4.5 知识点 179
**** TODO 4.5 文章的评论功能 180
***** TODO 4.5.1 数据模型类和表单类 180
***** TODO 4.5.2 实现评论功能 181
***** TODO 4.5.3 知识点 184
**** TODO 4.6 多样化显示 185
***** TODO 4.6.1 统计文章总数 186
***** TODO 4.6.2 最新发布的文章 188
***** TODO 4.6.3 评论最多的文章 189
***** TODO 4.6.4 自定义模板选择器 192
***** TODO 4.6.5 知识点 193
**** TODO 4.7 管理和应用文章标签 195
***** TODO 4.7.1 管理文章标签 195
***** TODO 4.7.2 发布文章时选择标签 200
***** TODO 4.7.3 在文章中显示文章标签 202
***** TODO 4.7.4 推荐相似文章 202
***** TODO 4.7.5 知识点 204
*** TODO 第5章 收集和展示图片 206[/]
**** TODO 5.1 收集网络图片 206
***** TODO 5.1.1 创建图片相关类 207
***** TODO 5.1.2 收集和管理图片 210
***** TODO 5.1.3 完善图片管理功能 214
***** TODO 5.1.4 知识点 218
**** TODO 5.2 展示图片 219
***** TODO 5.2.1 瀑布流方式展示图片 219
***** TODO 5.2.2 查看图片的详细信息 223
***** TODO 5.2.3 知识点 224
*** TODO 第6章 中场休整 226[/]
*** TODO 第7章 创建在线学习应用 227[/]
**** TODO 7.1 基于类的视图 227
***** TODO 7.1.1 最简类视图 228
***** TODO 7.1.2 读取数据 230
***** TODO 7.1.3 初步了解Mixin 232
***** TODO 7.1.4 知识点 233
**** TODO 7.2 管理课程标题 234
***** TODO 7.2.1 判断用户是否登录 235
***** TODO 7.2.2 创建课程 237
***** TODO 7.2.3 删除课程 239
***** TODO 7.2.4 知识点 243
**** TODO 7.3 发布和学习课程内容 245
***** TODO 7.3.1 课程内容的数据模型 246
***** TODO 7.3.2 课程内容的表单类 249
***** TODO 7.3.3 课程内容的视图 250
***** TODO 7.3.4 查看课程内容 252
***** TODO 7.3.5 注册学习课程 257
***** TODO 7.3.6 知识点 260
*** TODO 第8章 结束和开始 262 [[/]
*** TODO 读一下p55的代码
* TODO 处理wait

* TODO 整理内容

** TODO 整理学习笔记
** TODO 整理快速开发的项目模板
* 文件夹详解
1. test
   1. 下面是所有的测试 包括 使用django  或者其他内容  使用python与否
   2. [ ]
* TODO python的数据结构
* TODO 复习
** TODO [#A] 复习[2020-10-01 四]的知识
SCHEDULED: <2020-10-05 一 18:00>
